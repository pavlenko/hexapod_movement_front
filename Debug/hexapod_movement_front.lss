
hexapod_movement_front.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a3c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000018d  00800200  00800200  00000ab0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ab0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ae0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000b20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d47  00000000  00000000  00000c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011de  00000000  00000000  000029b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c8c  00000000  00000000  00003b95  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003c4  00000000  00000000  00004824  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008cc  00000000  00000000  00004be8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cef  00000000  00000000  000054b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  000061a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	4e c1       	rjmp	.+668    	; 0x2e2 <__vector_17>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	bb c4       	rjmp	.+2422   	; 0x9d4 <__vector_23>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	e3 c1       	rjmp	.+966    	; 0x448 <__vector_32>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	82 c2       	rjmp	.+1284   	; 0x5ae <__vector_42>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2b c3       	rjmp	.+1622   	; 0x714 <__vector_47>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e3       	ldi	r30, 0x3C	; 60
  fc:	fa e0       	ldi	r31, 0x0A	; 10
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ad 38       	cpi	r26, 0x8D	; 141
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	c2 d0       	rcall	.+388    	; 0x2a4 <main>
 120:	8b c4       	rjmp	.+2326   	; 0xa38 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <initialize_es>:
}

void es_detach(uint8_t code)
{
	if (code < ES_HANDLERS_MAX) {
		es_handlers[code] = 0;
 124:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <es_head>
 128:	10 92 7a 03 	sts	0x037A, r1	; 0x80037a <es_tail>
 12c:	10 92 1e 03 	sts	0x031E, r1	; 0x80031e <es_count>
 130:	08 95       	ret

00000132 <es_trigger>:
	}
}

void es_trigger(uint8_t code)
{
	if (code < ES_HANDLERS_MAX && es_count < ES_EVENTS_MAX) {
 132:	8e 31       	cpi	r24, 0x1E	; 30
 134:	d0 f4       	brcc	.+52     	; 0x16a <es_trigger+0x38>
 136:	90 91 1e 03 	lds	r25, 0x031E	; 0x80031e <es_count>
 13a:	9e 31       	cpi	r25, 0x1E	; 30
 13c:	b0 f4       	brcc	.+44     	; 0x16a <es_trigger+0x38>
		es_events[es_tail] = code;
 13e:	e0 91 7a 03 	lds	r30, 0x037A	; 0x80037a <es_tail>
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	e1 5e       	subi	r30, 0xE1	; 225
 146:	fc 4f       	sbci	r31, 0xFC	; 252
 148:	80 83       	st	Z, r24
		es_tail++;
 14a:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <es_tail>
 14e:	8f 5f       	subi	r24, 0xFF	; 255
 150:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <es_tail>
		
		if (es_tail == ES_EVENTS_MAX) {
 154:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <es_tail>
 158:	8e 31       	cpi	r24, 0x1E	; 30
 15a:	11 f4       	brne	.+4      	; 0x160 <es_trigger+0x2e>
			es_tail = 0;
 15c:	10 92 7a 03 	sts	0x037A, r1	; 0x80037a <es_tail>
		}
		
		es_count++;
 160:	80 91 1e 03 	lds	r24, 0x031E	; 0x80031e <es_count>
 164:	8f 5f       	subi	r24, 0xFF	; 255
 166:	80 93 1e 03 	sts	0x031E, r24	; 0x80031e <es_count>
 16a:	08 95       	ret

0000016c <initialize_led>:

#include <avr/io.h>

void initialize_led(void)
{
	DDRB  |= _BV(PB7);
 16c:	27 9a       	sbi	0x04, 7	; 4
	PORTB &= ~_BV(PB7);
 16e:	2f 98       	cbi	0x05, 7	; 5
 170:	08 95       	ret

00000172 <initialize_leg>:

volatile leg_t right_legs[3];
volatile leg_t left_legs[3];

void initialize_leg(void)
{
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
	right_legs[LEG_FRONT].c = servomotor_attach(&PORTL, PL3, 130, 1);//130
 176:	21 e0       	ldi	r18, 0x01	; 1
 178:	42 e8       	ldi	r20, 0x82	; 130
 17a:	50 e0       	ldi	r21, 0x00	; 0
 17c:	63 e0       	ldi	r22, 0x03	; 3
 17e:	8b e0       	ldi	r24, 0x0B	; 11
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	ce d3       	rcall	.+1948   	; 0x920 <servomotor_attach>
 184:	cb e7       	ldi	r28, 0x7B	; 123
 186:	d3 e0       	ldi	r29, 0x03	; 3
 188:	88 83       	st	Y, r24
	right_legs[LEG_FRONT].f = servomotor_attach(&PORTL, PL2, -60, 1);//-60
 18a:	21 e0       	ldi	r18, 0x01	; 1
 18c:	44 ec       	ldi	r20, 0xC4	; 196
 18e:	5f ef       	ldi	r21, 0xFF	; 255
 190:	62 e0       	ldi	r22, 0x02	; 2
 192:	8b e0       	ldi	r24, 0x0B	; 11
 194:	91 e0       	ldi	r25, 0x01	; 1
 196:	c4 d3       	rcall	.+1928   	; 0x920 <servomotor_attach>
 198:	89 83       	std	Y+1, r24	; 0x01
	right_legs[LEG_FRONT].t = servomotor_attach(&PORTL, PL1, -80, 0);//-80
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	40 eb       	ldi	r20, 0xB0	; 176
 19e:	5f ef       	ldi	r21, 0xFF	; 255
 1a0:	61 e0       	ldi	r22, 0x01	; 1
 1a2:	8b e0       	ldi	r24, 0x0B	; 11
 1a4:	91 e0       	ldi	r25, 0x01	; 1
 1a6:	bc d3       	rcall	.+1912   	; 0x920 <servomotor_attach>
 1a8:	8a 83       	std	Y+2, r24	; 0x02
	
	right_legs[LEG_MIDDLE].c = servomotor_attach(&PORTK, PK4, 80, 1);//80
 1aa:	21 e0       	ldi	r18, 0x01	; 1
 1ac:	40 e5       	ldi	r20, 0x50	; 80
 1ae:	50 e0       	ldi	r21, 0x00	; 0
 1b0:	64 e0       	ldi	r22, 0x04	; 4
 1b2:	88 e0       	ldi	r24, 0x08	; 8
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	b4 d3       	rcall	.+1896   	; 0x920 <servomotor_attach>
 1b8:	8b 83       	std	Y+3, r24	; 0x03
	right_legs[LEG_MIDDLE].f = servomotor_attach(&PORTK, PK3, -270, 1);//-540????
 1ba:	21 e0       	ldi	r18, 0x01	; 1
 1bc:	42 ef       	ldi	r20, 0xF2	; 242
 1be:	5e ef       	ldi	r21, 0xFE	; 254
 1c0:	63 e0       	ldi	r22, 0x03	; 3
 1c2:	88 e0       	ldi	r24, 0x08	; 8
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	ac d3       	rcall	.+1880   	; 0x920 <servomotor_attach>
 1c8:	8c 83       	std	Y+4, r24	; 0x04
	right_legs[LEG_MIDDLE].t = servomotor_attach(&PORTK, PK2, -330, 0);//-330
 1ca:	20 e0       	ldi	r18, 0x00	; 0
 1cc:	46 eb       	ldi	r20, 0xB6	; 182
 1ce:	5e ef       	ldi	r21, 0xFE	; 254
 1d0:	62 e0       	ldi	r22, 0x02	; 2
 1d2:	88 e0       	ldi	r24, 0x08	; 8
 1d4:	91 e0       	ldi	r25, 0x01	; 1
 1d6:	a4 d3       	rcall	.+1864   	; 0x920 <servomotor_attach>
 1d8:	8d 83       	std	Y+5, r24	; 0x05
	
	right_legs[LEG_BACK].c = servomotor_attach(&PORTF, PF2, 220, 1);//220
 1da:	21 e0       	ldi	r18, 0x01	; 1
 1dc:	4c ed       	ldi	r20, 0xDC	; 220
 1de:	50 e0       	ldi	r21, 0x00	; 0
 1e0:	62 e0       	ldi	r22, 0x02	; 2
 1e2:	81 e3       	ldi	r24, 0x31	; 49
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	9c d3       	rcall	.+1848   	; 0x920 <servomotor_attach>
 1e8:	8e 83       	std	Y+6, r24	; 0x06
	right_legs[LEG_BACK].f = servomotor_attach(&PORTF, PF1, -190, 1);//-190
 1ea:	21 e0       	ldi	r18, 0x01	; 1
 1ec:	42 e4       	ldi	r20, 0x42	; 66
 1ee:	5f ef       	ldi	r21, 0xFF	; 255
 1f0:	61 e0       	ldi	r22, 0x01	; 1
 1f2:	81 e3       	ldi	r24, 0x31	; 49
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	94 d3       	rcall	.+1832   	; 0x920 <servomotor_attach>
 1f8:	8f 83       	std	Y+7, r24	; 0x07
	right_legs[LEG_BACK].t = servomotor_attach(&PORTF, PF0, -170, 0);//-170
 1fa:	20 e0       	ldi	r18, 0x00	; 0
 1fc:	46 e5       	ldi	r20, 0x56	; 86
 1fe:	5f ef       	ldi	r21, 0xFF	; 255
 200:	60 e0       	ldi	r22, 0x00	; 0
 202:	81 e3       	ldi	r24, 0x31	; 49
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	8c d3       	rcall	.+1816   	; 0x920 <servomotor_attach>
 208:	88 87       	std	Y+8, r24	; 0x08
	
	left_legs[LEG_FRONT].c = servomotor_attach(&PORTA, PA7, -10, 0);//-10
 20a:	20 e0       	ldi	r18, 0x00	; 0
 20c:	46 ef       	ldi	r20, 0xF6	; 246
 20e:	5f ef       	ldi	r21, 0xFF	; 255
 210:	67 e0       	ldi	r22, 0x07	; 7
 212:	82 e2       	ldi	r24, 0x22	; 34
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	84 d3       	rcall	.+1800   	; 0x920 <servomotor_attach>
 218:	c4 e8       	ldi	r28, 0x84	; 132
 21a:	d3 e0       	ldi	r29, 0x03	; 3
 21c:	88 83       	st	Y, r24
	left_legs[LEG_FRONT].f = servomotor_attach(&PORTA, PA6, -70, 0);//-70
 21e:	20 e0       	ldi	r18, 0x00	; 0
 220:	4a eb       	ldi	r20, 0xBA	; 186
 222:	5f ef       	ldi	r21, 0xFF	; 255
 224:	66 e0       	ldi	r22, 0x06	; 6
 226:	82 e2       	ldi	r24, 0x22	; 34
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	7a d3       	rcall	.+1780   	; 0x920 <servomotor_attach>
 22c:	89 83       	std	Y+1, r24	; 0x01
	left_legs[LEG_FRONT].t = servomotor_attach(&PORTA, PA5, 120, 1);//120
 22e:	21 e0       	ldi	r18, 0x01	; 1
 230:	48 e7       	ldi	r20, 0x78	; 120
 232:	50 e0       	ldi	r21, 0x00	; 0
 234:	65 e0       	ldi	r22, 0x05	; 5
 236:	82 e2       	ldi	r24, 0x22	; 34
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	72 d3       	rcall	.+1764   	; 0x920 <servomotor_attach>
 23c:	8a 83       	std	Y+2, r24	; 0x02
	
	left_legs[LEG_MIDDLE].c = servomotor_attach(&PORTA, PA4, -130, 0);//-130
 23e:	20 e0       	ldi	r18, 0x00	; 0
 240:	4e e7       	ldi	r20, 0x7E	; 126
 242:	5f ef       	ldi	r21, 0xFF	; 255
 244:	64 e0       	ldi	r22, 0x04	; 4
 246:	82 e2       	ldi	r24, 0x22	; 34
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	6a d3       	rcall	.+1748   	; 0x920 <servomotor_attach>
 24c:	8b 83       	std	Y+3, r24	; 0x03
	left_legs[LEG_MIDDLE].f = servomotor_attach(&PORTA, PA3, -140, 0);//-140
 24e:	20 e0       	ldi	r18, 0x00	; 0
 250:	44 e7       	ldi	r20, 0x74	; 116
 252:	5f ef       	ldi	r21, 0xFF	; 255
 254:	63 e0       	ldi	r22, 0x03	; 3
 256:	82 e2       	ldi	r24, 0x22	; 34
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	62 d3       	rcall	.+1732   	; 0x920 <servomotor_attach>
 25c:	8c 83       	std	Y+4, r24	; 0x04
	left_legs[LEG_MIDDLE].t = servomotor_attach(&PORTA, PA2, -50, 1);//-50
 25e:	21 e0       	ldi	r18, 0x01	; 1
 260:	4e ec       	ldi	r20, 0xCE	; 206
 262:	5f ef       	ldi	r21, 0xFF	; 255
 264:	62 e0       	ldi	r22, 0x02	; 2
 266:	82 e2       	ldi	r24, 0x22	; 34
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	5a d3       	rcall	.+1716   	; 0x920 <servomotor_attach>
 26c:	8d 83       	std	Y+5, r24	; 0x05
	
	left_legs[LEG_BACK].c = servomotor_attach(&PORTB, PB4, -110, 0);//-110
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	42 e9       	ldi	r20, 0x92	; 146
 272:	5f ef       	ldi	r21, 0xFF	; 255
 274:	64 e0       	ldi	r22, 0x04	; 4
 276:	85 e2       	ldi	r24, 0x25	; 37
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	52 d3       	rcall	.+1700   	; 0x920 <servomotor_attach>
 27c:	8e 83       	std	Y+6, r24	; 0x06
	left_legs[LEG_BACK].f = servomotor_attach(&PORTB, PB5, -210, 0);//-210
 27e:	20 e0       	ldi	r18, 0x00	; 0
 280:	4e e2       	ldi	r20, 0x2E	; 46
 282:	5f ef       	ldi	r21, 0xFF	; 255
 284:	65 e0       	ldi	r22, 0x05	; 5
 286:	85 e2       	ldi	r24, 0x25	; 37
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	4a d3       	rcall	.+1684   	; 0x920 <servomotor_attach>
 28c:	8f 83       	std	Y+7, r24	; 0x07
 28e:	21 e0       	ldi	r18, 0x01	; 1
	left_legs[LEG_BACK].t = servomotor_attach(&PORTB, PB6, -40, 1);//-40
 290:	48 ed       	ldi	r20, 0xD8	; 216
 292:	5f ef       	ldi	r21, 0xFF	; 255
 294:	66 e0       	ldi	r22, 0x06	; 6
 296:	85 e2       	ldi	r24, 0x25	; 37
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	42 d3       	rcall	.+1668   	; 0x920 <servomotor_attach>
 29c:	88 87       	std	Y+8, r24	; 0x08
 29e:	df 91       	pop	r29
 2a0:	cf 91       	pop	r28
}
 2a2:	08 95       	ret

000002a4 <main>:
volatile int16_t calibration_val[SM_MAX];

int main(void)
{
    // Set pin as input
	DDRB &= ~(1 << PB1);
 2a4:	21 98       	cbi	0x04, 1	; 4

	// Check if pin is high
    if (PINB & (1 << PB1)) {
 2a6:	19 99       	sbic	0x03, 1	; 3
 2a8:	19 c0       	rjmp	.+50     	; 0x2dc <main+0x38>
        // Do nothing - disable all logic for allow simple program update
		return 0;
    } else {
		// Execute main program
        //initialize_usart0();
        initialize_led();
 2aa:	60 df       	rcall	.-320    	; 0x16c <initialize_led>
        initialize_es();
 2ac:	3b df       	rcall	.-394    	; 0x124 <initialize_es>
        initialize_leg();//TODO error here
 2ae:	61 df       	rcall	.-318    	; 0x172 <initialize_leg>
 2b0:	78 94       	sei
        //initialize_hp();
        //initialize_timer0();

        sei();
 2b2:	2f 9a       	sbi	0x05, 7	; 5
		
		while(1)
		{
			LED_ON();
 2b4:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b6:	89 e6       	ldi	r24, 0x69	; 105
 2b8:	98 e1       	ldi	r25, 0x18	; 24
 2ba:	21 50       	subi	r18, 0x01	; 1
 2bc:	80 40       	sbci	r24, 0x00	; 0
 2be:	90 40       	sbci	r25, 0x00	; 0
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <main+0x16>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <main+0x20>
 2c4:	00 00       	nop
 2c6:	2f 98       	cbi	0x05, 7	; 5
			_delay_ms(500);
			LED_OFF();
 2c8:	2f ef       	ldi	r18, 0xFF	; 255
 2ca:	89 e6       	ldi	r24, 0x69	; 105
 2cc:	98 e1       	ldi	r25, 0x18	; 24
 2ce:	21 50       	subi	r18, 0x01	; 1
 2d0:	80 40       	sbci	r24, 0x00	; 0
 2d2:	90 40       	sbci	r25, 0x00	; 0
 2d4:	e1 f7       	brne	.-8      	; 0x2ce <main+0x2a>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <main+0x34>
 2d8:	00 00       	nop
 2da:	eb cf       	rjmp	.-42     	; 0x2b2 <main+0xe>
 2dc:	80 e0       	ldi	r24, 0x00	; 0
        {
            es_dispatch();
            LED_OFF();
        }
    }
}
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	08 95       	ret

000002e2 <__vector_17>:
 2e2:	1f 92       	push	r1
		}
	#endif

	#ifdef SM_USE_TIMER5
		if (timer == sm_timer5) {
			TIMSK5 &= ~_BV(OCIE5A);
 2e4:	0f 92       	push	r0
 2e6:	0f b6       	in	r0, 0x3f	; 63
 2e8:	0f 92       	push	r0
 2ea:	11 24       	eor	r1, r1
 2ec:	0b b6       	in	r0, 0x3b	; 59
 2ee:	0f 92       	push	r0
 2f0:	2f 93       	push	r18
 2f2:	3f 93       	push	r19
 2f4:	4f 93       	push	r20
 2f6:	5f 93       	push	r21
 2f8:	8f 93       	push	r24
 2fa:	9f 93       	push	r25
 2fc:	af 93       	push	r26
 2fe:	bf 93       	push	r27
 300:	ef 93       	push	r30
 302:	ff 93       	push	r31
 304:	2f 9a       	sbi	0x05, 7	; 5
 306:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <sm_channel+0x1>
 30a:	88 23       	and	r24, r24
 30c:	2c f4       	brge	.+10     	; 0x318 <__vector_17+0x36>
 30e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 312:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
 316:	2c c0       	rjmp	.+88     	; 0x370 <__vector_17+0x8e>
 318:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <sm_channel+0x1>
 31c:	e6 5f       	subi	r30, 0xF6	; 246
 31e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end>
 322:	e8 17       	cp	r30, r24
 324:	28 f5       	brcc	.+74     	; 0x370 <__vector_17+0x8e>
 326:	2e 2f       	mov	r18, r30
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	87 e0       	ldi	r24, 0x07	; 7
 32c:	e8 9f       	mul	r30, r24
 32e:	f0 01       	movw	r30, r0
 330:	11 24       	eor	r1, r1
 332:	eb 5f       	subi	r30, 0xFB	; 251
 334:	fd 4f       	sbci	r31, 0xFD	; 253
 336:	80 81       	ld	r24, Z
 338:	86 ff       	sbrs	r24, 6
 33a:	1a c0       	rjmp	.+52     	; 0x370 <__vector_17+0x8e>
 33c:	f9 01       	movw	r30, r18
 33e:	ee 0f       	add	r30, r30
 340:	ff 1f       	adc	r31, r31
 342:	ee 0f       	add	r30, r30
 344:	ff 1f       	adc	r31, r31
 346:	ee 0f       	add	r30, r30
 348:	ff 1f       	adc	r31, r31
 34a:	e2 1b       	sub	r30, r18
 34c:	f3 0b       	sbc	r31, r19
 34e:	eb 5f       	subi	r30, 0xFB	; 251
 350:	fd 4f       	sbci	r31, 0xFD	; 253
 352:	a5 81       	ldd	r26, Z+5	; 0x05
 354:	b6 81       	ldd	r27, Z+6	; 0x06
 356:	2c 91       	ld	r18, X
 358:	30 81       	ld	r19, Z
 35a:	3f 73       	andi	r19, 0x3F	; 63
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	02 c0       	rjmp	.+4      	; 0x366 <__vector_17+0x84>
 362:	88 0f       	add	r24, r24
 364:	99 1f       	adc	r25, r25
 366:	3a 95       	dec	r19
 368:	e2 f7       	brpl	.-8      	; 0x362 <__vector_17+0x80>
 36a:	80 95       	com	r24
 36c:	82 23       	and	r24, r18
 36e:	8c 93       	st	X, r24
 370:	e1 e0       	ldi	r30, 0x01	; 1
 372:	f2 e0       	ldi	r31, 0x02	; 2
 374:	81 81       	ldd	r24, Z+1	; 0x01
 376:	8f 5f       	subi	r24, 0xFF	; 255
 378:	81 83       	std	Z+1, r24	; 0x01
 37a:	e1 81       	ldd	r30, Z+1	; 0x01
 37c:	e6 5f       	subi	r30, 0xF6	; 246
 37e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end>
 382:	e8 17       	cp	r30, r24
 384:	a8 f5       	brcc	.+106    	; 0x3f0 <__vector_17+0x10e>
 386:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <sm_channel+0x1>
 38a:	8a 30       	cpi	r24, 0x0A	; 10
 38c:	8c f5       	brge	.+98     	; 0x3f0 <__vector_17+0x10e>
 38e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
 392:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 396:	2e 2f       	mov	r18, r30
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	87 e0       	ldi	r24, 0x07	; 7
 39c:	e8 9f       	mul	r30, r24
 39e:	f0 01       	movw	r30, r0
 3a0:	11 24       	eor	r1, r1
 3a2:	eb 5f       	subi	r30, 0xFB	; 251
 3a4:	fd 4f       	sbci	r31, 0xFD	; 253
 3a6:	81 81       	ldd	r24, Z+1	; 0x01
 3a8:	92 81       	ldd	r25, Z+2	; 0x02
 3aa:	84 0f       	add	r24, r20
 3ac:	95 1f       	adc	r25, r21
 3ae:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 3b2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 3b6:	80 81       	ld	r24, Z
 3b8:	86 ff       	sbrs	r24, 6
 3ba:	35 c0       	rjmp	.+106    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3bc:	f9 01       	movw	r30, r18
 3be:	ee 0f       	add	r30, r30
 3c0:	ff 1f       	adc	r31, r31
 3c2:	ee 0f       	add	r30, r30
 3c4:	ff 1f       	adc	r31, r31
 3c6:	ee 0f       	add	r30, r30
 3c8:	ff 1f       	adc	r31, r31
 3ca:	e2 1b       	sub	r30, r18
 3cc:	f3 0b       	sbc	r31, r19
 3ce:	eb 5f       	subi	r30, 0xFB	; 251
 3d0:	fd 4f       	sbci	r31, 0xFD	; 253
 3d2:	a5 81       	ldd	r26, Z+5	; 0x05
 3d4:	b6 81       	ldd	r27, Z+6	; 0x06
 3d6:	3c 91       	ld	r19, X
 3d8:	20 81       	ld	r18, Z
 3da:	2f 73       	andi	r18, 0x3F	; 63
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <__vector_17+0x104>
 3e2:	88 0f       	add	r24, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	2a 95       	dec	r18
 3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <__vector_17+0x100>
 3ea:	83 2b       	or	r24, r19
 3ec:	8c 93       	st	X, r24
 3ee:	1b c0       	rjmp	.+54     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3f0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
 3f4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 3f8:	04 96       	adiw	r24, 0x04	; 4
 3fa:	80 34       	cpi	r24, 0x40	; 64
 3fc:	9c 49       	sbci	r25, 0x9C	; 156
 3fe:	38 f4       	brcc	.+14     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 400:	80 e4       	ldi	r24, 0x40	; 64
 402:	9c e9       	ldi	r25, 0x9C	; 156
 404:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 408:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 40c:	09 c0       	rjmp	.+18     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 40e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
 412:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 416:	04 96       	adiw	r24, 0x04	; 4
 418:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 41c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 420:	8f ef       	ldi	r24, 0xFF	; 255
 422:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <sm_channel+0x1>
 426:	ff 91       	pop	r31
 428:	ef 91       	pop	r30
 42a:	bf 91       	pop	r27
 42c:	af 91       	pop	r26
 42e:	9f 91       	pop	r25
 430:	8f 91       	pop	r24
 432:	5f 91       	pop	r21
 434:	4f 91       	pop	r20
 436:	3f 91       	pop	r19
 438:	2f 91       	pop	r18
 43a:	0f 90       	pop	r0
 43c:	0b be       	out	0x3b, r0	; 59
 43e:	0f 90       	pop	r0
 440:	0f be       	out	0x3f, r0	; 63
 442:	0f 90       	pop	r0
 444:	1f 90       	pop	r1
 446:	18 95       	reti

00000448 <__vector_32>:
 448:	1f 92       	push	r1
 44a:	0f 92       	push	r0
 44c:	0f b6       	in	r0, 0x3f	; 63
 44e:	0f 92       	push	r0
 450:	11 24       	eor	r1, r1
 452:	0b b6       	in	r0, 0x3b	; 59
 454:	0f 92       	push	r0
 456:	2f 93       	push	r18
 458:	3f 93       	push	r19
 45a:	4f 93       	push	r20
 45c:	5f 93       	push	r21
 45e:	8f 93       	push	r24
 460:	9f 93       	push	r25
 462:	af 93       	push	r26
 464:	bf 93       	push	r27
 466:	ef 93       	push	r30
 468:	ff 93       	push	r31
 46a:	2f 9a       	sbi	0x05, 7	; 5
 46c:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <sm_channel+0x2>
 470:	88 23       	and	r24, r24
 472:	2c f4       	brge	.+10     	; 0x47e <__vector_32+0x36>
 474:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
 478:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 47c:	2c c0       	rjmp	.+88     	; 0x4d6 <__vector_32+0x8e>
 47e:	e0 91 03 02 	lds	r30, 0x0203	; 0x800203 <sm_channel+0x2>
 482:	ec 5e       	subi	r30, 0xEC	; 236
 484:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end>
 488:	e8 17       	cp	r30, r24
 48a:	28 f5       	brcc	.+74     	; 0x4d6 <__vector_32+0x8e>
 48c:	2e 2f       	mov	r18, r30
 48e:	30 e0       	ldi	r19, 0x00	; 0
 490:	87 e0       	ldi	r24, 0x07	; 7
 492:	e8 9f       	mul	r30, r24
 494:	f0 01       	movw	r30, r0
 496:	11 24       	eor	r1, r1
 498:	eb 5f       	subi	r30, 0xFB	; 251
 49a:	fd 4f       	sbci	r31, 0xFD	; 253
 49c:	80 81       	ld	r24, Z
 49e:	86 ff       	sbrs	r24, 6
 4a0:	1a c0       	rjmp	.+52     	; 0x4d6 <__vector_32+0x8e>
 4a2:	f9 01       	movw	r30, r18
 4a4:	ee 0f       	add	r30, r30
 4a6:	ff 1f       	adc	r31, r31
 4a8:	ee 0f       	add	r30, r30
 4aa:	ff 1f       	adc	r31, r31
 4ac:	ee 0f       	add	r30, r30
 4ae:	ff 1f       	adc	r31, r31
 4b0:	e2 1b       	sub	r30, r18
 4b2:	f3 0b       	sbc	r31, r19
 4b4:	eb 5f       	subi	r30, 0xFB	; 251
 4b6:	fd 4f       	sbci	r31, 0xFD	; 253
 4b8:	a5 81       	ldd	r26, Z+5	; 0x05
 4ba:	b6 81       	ldd	r27, Z+6	; 0x06
 4bc:	2c 91       	ld	r18, X
 4be:	30 81       	ld	r19, Z
 4c0:	3f 73       	andi	r19, 0x3F	; 63
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <__vector_32+0x84>
 4c8:	88 0f       	add	r24, r24
 4ca:	99 1f       	adc	r25, r25
 4cc:	3a 95       	dec	r19
 4ce:	e2 f7       	brpl	.-8      	; 0x4c8 <__vector_32+0x80>
 4d0:	80 95       	com	r24
 4d2:	82 23       	and	r24, r18
 4d4:	8c 93       	st	X, r24
 4d6:	e1 e0       	ldi	r30, 0x01	; 1
 4d8:	f2 e0       	ldi	r31, 0x02	; 2
 4da:	82 81       	ldd	r24, Z+2	; 0x02
 4dc:	8f 5f       	subi	r24, 0xFF	; 255
 4de:	82 83       	std	Z+2, r24	; 0x02
 4e0:	e2 81       	ldd	r30, Z+2	; 0x02
 4e2:	ec 5e       	subi	r30, 0xEC	; 236
 4e4:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end>
 4e8:	e8 17       	cp	r30, r24
 4ea:	a8 f5       	brcc	.+106    	; 0x556 <__vector_32+0x10e>
 4ec:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <sm_channel+0x2>
 4f0:	8a 30       	cpi	r24, 0x0A	; 10
 4f2:	8c f5       	brge	.+98     	; 0x556 <__vector_32+0x10e>
 4f4:	40 91 94 00 	lds	r20, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 4f8:	50 91 95 00 	lds	r21, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
 4fc:	2e 2f       	mov	r18, r30
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	87 e0       	ldi	r24, 0x07	; 7
 502:	e8 9f       	mul	r30, r24
 504:	f0 01       	movw	r30, r0
 506:	11 24       	eor	r1, r1
 508:	eb 5f       	subi	r30, 0xFB	; 251
 50a:	fd 4f       	sbci	r31, 0xFD	; 253
 50c:	81 81       	ldd	r24, Z+1	; 0x01
 50e:	92 81       	ldd	r25, Z+2	; 0x02
 510:	84 0f       	add	r24, r20
 512:	95 1f       	adc	r25, r21
 514:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 518:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
 51c:	80 81       	ld	r24, Z
 51e:	86 ff       	sbrs	r24, 6
 520:	35 c0       	rjmp	.+106    	; 0x58c <__vector_32+0x144>
 522:	f9 01       	movw	r30, r18
 524:	ee 0f       	add	r30, r30
 526:	ff 1f       	adc	r31, r31
 528:	ee 0f       	add	r30, r30
 52a:	ff 1f       	adc	r31, r31
 52c:	ee 0f       	add	r30, r30
 52e:	ff 1f       	adc	r31, r31
 530:	e2 1b       	sub	r30, r18
 532:	f3 0b       	sbc	r31, r19
 534:	eb 5f       	subi	r30, 0xFB	; 251
 536:	fd 4f       	sbci	r31, 0xFD	; 253
 538:	a5 81       	ldd	r26, Z+5	; 0x05
 53a:	b6 81       	ldd	r27, Z+6	; 0x06
 53c:	3c 91       	ld	r19, X
 53e:	20 81       	ld	r18, Z
 540:	2f 73       	andi	r18, 0x3F	; 63
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	02 c0       	rjmp	.+4      	; 0x54c <__vector_32+0x104>
 548:	88 0f       	add	r24, r24
 54a:	99 1f       	adc	r25, r25
 54c:	2a 95       	dec	r18
 54e:	e2 f7       	brpl	.-8      	; 0x548 <__vector_32+0x100>
 550:	83 2b       	or	r24, r19
 552:	8c 93       	st	X, r24
 554:	1b c0       	rjmp	.+54     	; 0x58c <__vector_32+0x144>
 556:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 55a:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
 55e:	04 96       	adiw	r24, 0x04	; 4
 560:	80 34       	cpi	r24, 0x40	; 64
 562:	9c 49       	sbci	r25, 0x9C	; 156
 564:	38 f4       	brcc	.+14     	; 0x574 <__vector_32+0x12c>
 566:	80 e4       	ldi	r24, 0x40	; 64
 568:	9c e9       	ldi	r25, 0x9C	; 156
 56a:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 56e:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
 572:	09 c0       	rjmp	.+18     	; 0x586 <__vector_32+0x13e>
 574:	80 91 94 00 	lds	r24, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
 578:	90 91 95 00 	lds	r25, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
 57c:	04 96       	adiw	r24, 0x04	; 4
 57e:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 582:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
 586:	8f ef       	ldi	r24, 0xFF	; 255
 588:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <sm_channel+0x2>
 58c:	ff 91       	pop	r31
 58e:	ef 91       	pop	r30
 590:	bf 91       	pop	r27
 592:	af 91       	pop	r26
 594:	9f 91       	pop	r25
 596:	8f 91       	pop	r24
 598:	5f 91       	pop	r21
 59a:	4f 91       	pop	r20
 59c:	3f 91       	pop	r19
 59e:	2f 91       	pop	r18
 5a0:	0f 90       	pop	r0
 5a2:	0b be       	out	0x3b, r0	; 59
 5a4:	0f 90       	pop	r0
 5a6:	0f be       	out	0x3f, r0	; 63
 5a8:	0f 90       	pop	r0
 5aa:	1f 90       	pop	r1
 5ac:	18 95       	reti

000005ae <__vector_42>:
 5ae:	1f 92       	push	r1
 5b0:	0f 92       	push	r0
 5b2:	0f b6       	in	r0, 0x3f	; 63
 5b4:	0f 92       	push	r0
 5b6:	11 24       	eor	r1, r1
 5b8:	0b b6       	in	r0, 0x3b	; 59
 5ba:	0f 92       	push	r0
 5bc:	2f 93       	push	r18
 5be:	3f 93       	push	r19
 5c0:	4f 93       	push	r20
 5c2:	5f 93       	push	r21
 5c4:	8f 93       	push	r24
 5c6:	9f 93       	push	r25
 5c8:	af 93       	push	r26
 5ca:	bf 93       	push	r27
 5cc:	ef 93       	push	r30
 5ce:	ff 93       	push	r31
 5d0:	2f 9a       	sbi	0x05, 7	; 5
 5d2:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <sm_channel+0x3>
 5d6:	88 23       	and	r24, r24
 5d8:	2c f4       	brge	.+10     	; 0x5e4 <__vector_42+0x36>
 5da:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
 5de:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>
 5e2:	2c c0       	rjmp	.+88     	; 0x63c <__vector_42+0x8e>
 5e4:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <sm_channel+0x3>
 5e8:	e2 5e       	subi	r30, 0xE2	; 226
 5ea:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end>
 5ee:	e8 17       	cp	r30, r24
 5f0:	28 f5       	brcc	.+74     	; 0x63c <__vector_42+0x8e>
 5f2:	2e 2f       	mov	r18, r30
 5f4:	30 e0       	ldi	r19, 0x00	; 0
 5f6:	87 e0       	ldi	r24, 0x07	; 7
 5f8:	e8 9f       	mul	r30, r24
 5fa:	f0 01       	movw	r30, r0
 5fc:	11 24       	eor	r1, r1
 5fe:	eb 5f       	subi	r30, 0xFB	; 251
 600:	fd 4f       	sbci	r31, 0xFD	; 253
 602:	80 81       	ld	r24, Z
 604:	86 ff       	sbrs	r24, 6
 606:	1a c0       	rjmp	.+52     	; 0x63c <__vector_42+0x8e>
 608:	f9 01       	movw	r30, r18
 60a:	ee 0f       	add	r30, r30
 60c:	ff 1f       	adc	r31, r31
 60e:	ee 0f       	add	r30, r30
 610:	ff 1f       	adc	r31, r31
 612:	ee 0f       	add	r30, r30
 614:	ff 1f       	adc	r31, r31
 616:	e2 1b       	sub	r30, r18
 618:	f3 0b       	sbc	r31, r19
 61a:	eb 5f       	subi	r30, 0xFB	; 251
 61c:	fd 4f       	sbci	r31, 0xFD	; 253
 61e:	a5 81       	ldd	r26, Z+5	; 0x05
 620:	b6 81       	ldd	r27, Z+6	; 0x06
 622:	2c 91       	ld	r18, X
 624:	30 81       	ld	r19, Z
 626:	3f 73       	andi	r19, 0x3F	; 63
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	02 c0       	rjmp	.+4      	; 0x632 <__vector_42+0x84>
 62e:	88 0f       	add	r24, r24
 630:	99 1f       	adc	r25, r25
 632:	3a 95       	dec	r19
 634:	e2 f7       	brpl	.-8      	; 0x62e <__vector_42+0x80>
 636:	80 95       	com	r24
 638:	82 23       	and	r24, r18
 63a:	8c 93       	st	X, r24
 63c:	e1 e0       	ldi	r30, 0x01	; 1
 63e:	f2 e0       	ldi	r31, 0x02	; 2
 640:	83 81       	ldd	r24, Z+3	; 0x03
 642:	8f 5f       	subi	r24, 0xFF	; 255
 644:	83 83       	std	Z+3, r24	; 0x03
 646:	e3 81       	ldd	r30, Z+3	; 0x03
 648:	e2 5e       	subi	r30, 0xE2	; 226
 64a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end>
 64e:	e8 17       	cp	r30, r24
 650:	a8 f5       	brcc	.+106    	; 0x6bc <__vector_42+0x10e>
 652:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <sm_channel+0x3>
 656:	8a 30       	cpi	r24, 0x0A	; 10
 658:	8c f5       	brge	.+98     	; 0x6bc <__vector_42+0x10e>
 65a:	40 91 a4 00 	lds	r20, 0x00A4	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>
 65e:	50 91 a5 00 	lds	r21, 0x00A5	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
 662:	2e 2f       	mov	r18, r30
 664:	30 e0       	ldi	r19, 0x00	; 0
 666:	87 e0       	ldi	r24, 0x07	; 7
 668:	e8 9f       	mul	r30, r24
 66a:	f0 01       	movw	r30, r0
 66c:	11 24       	eor	r1, r1
 66e:	eb 5f       	subi	r30, 0xFB	; 251
 670:	fd 4f       	sbci	r31, 0xFD	; 253
 672:	81 81       	ldd	r24, Z+1	; 0x01
 674:	92 81       	ldd	r25, Z+2	; 0x02
 676:	84 0f       	add	r24, r20
 678:	95 1f       	adc	r25, r21
 67a:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 67e:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 682:	80 81       	ld	r24, Z
 684:	86 ff       	sbrs	r24, 6
 686:	35 c0       	rjmp	.+106    	; 0x6f2 <__vector_42+0x144>
 688:	f9 01       	movw	r30, r18
 68a:	ee 0f       	add	r30, r30
 68c:	ff 1f       	adc	r31, r31
 68e:	ee 0f       	add	r30, r30
 690:	ff 1f       	adc	r31, r31
 692:	ee 0f       	add	r30, r30
 694:	ff 1f       	adc	r31, r31
 696:	e2 1b       	sub	r30, r18
 698:	f3 0b       	sbc	r31, r19
 69a:	eb 5f       	subi	r30, 0xFB	; 251
 69c:	fd 4f       	sbci	r31, 0xFD	; 253
 69e:	a5 81       	ldd	r26, Z+5	; 0x05
 6a0:	b6 81       	ldd	r27, Z+6	; 0x06
 6a2:	3c 91       	ld	r19, X
 6a4:	20 81       	ld	r18, Z
 6a6:	2f 73       	andi	r18, 0x3F	; 63
 6a8:	81 e0       	ldi	r24, 0x01	; 1
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <__vector_42+0x104>
 6ae:	88 0f       	add	r24, r24
 6b0:	99 1f       	adc	r25, r25
 6b2:	2a 95       	dec	r18
 6b4:	e2 f7       	brpl	.-8      	; 0x6ae <__vector_42+0x100>
 6b6:	83 2b       	or	r24, r19
 6b8:	8c 93       	st	X, r24
 6ba:	1b c0       	rjmp	.+54     	; 0x6f2 <__vector_42+0x144>
 6bc:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>
 6c0:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
 6c4:	04 96       	adiw	r24, 0x04	; 4
 6c6:	80 34       	cpi	r24, 0x40	; 64
 6c8:	9c 49       	sbci	r25, 0x9C	; 156
 6ca:	38 f4       	brcc	.+14     	; 0x6da <__vector_42+0x12c>
 6cc:	80 e4       	ldi	r24, 0x40	; 64
 6ce:	9c e9       	ldi	r25, 0x9C	; 156
 6d0:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 6d4:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 6d8:	09 c0       	rjmp	.+18     	; 0x6ec <__vector_42+0x13e>
 6da:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>
 6de:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
 6e2:	04 96       	adiw	r24, 0x04	; 4
 6e4:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 6e8:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 6ec:	8f ef       	ldi	r24, 0xFF	; 255
 6ee:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <sm_channel+0x3>
 6f2:	ff 91       	pop	r31
 6f4:	ef 91       	pop	r30
 6f6:	bf 91       	pop	r27
 6f8:	af 91       	pop	r26
 6fa:	9f 91       	pop	r25
 6fc:	8f 91       	pop	r24
 6fe:	5f 91       	pop	r21
 700:	4f 91       	pop	r20
 702:	3f 91       	pop	r19
 704:	2f 91       	pop	r18
 706:	0f 90       	pop	r0
 708:	0b be       	out	0x3b, r0	; 59
 70a:	0f 90       	pop	r0
 70c:	0f be       	out	0x3f, r0	; 63
 70e:	0f 90       	pop	r0
 710:	1f 90       	pop	r1
 712:	18 95       	reti

00000714 <__vector_47>:
 714:	1f 92       	push	r1
 716:	0f 92       	push	r0
 718:	0f b6       	in	r0, 0x3f	; 63
 71a:	0f 92       	push	r0
 71c:	11 24       	eor	r1, r1
 71e:	0b b6       	in	r0, 0x3b	; 59
 720:	0f 92       	push	r0
 722:	2f 93       	push	r18
 724:	3f 93       	push	r19
 726:	4f 93       	push	r20
 728:	5f 93       	push	r21
 72a:	8f 93       	push	r24
 72c:	9f 93       	push	r25
 72e:	af 93       	push	r26
 730:	bf 93       	push	r27
 732:	ef 93       	push	r30
 734:	ff 93       	push	r31
 736:	2f 9a       	sbi	0x05, 7	; 5
 738:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <sm_channel>
 73c:	88 23       	and	r24, r24
 73e:	2c f4       	brge	.+10     	; 0x74a <__vector_47+0x36>
 740:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
 744:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
 748:	2b c0       	rjmp	.+86     	; 0x7a0 <__vector_47+0x8c>
 74a:	e0 91 01 02 	lds	r30, 0x0201	; 0x800201 <sm_channel>
 74e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end>
 752:	e8 17       	cp	r30, r24
 754:	28 f5       	brcc	.+74     	; 0x7a0 <__vector_47+0x8c>
 756:	2e 2f       	mov	r18, r30
 758:	30 e0       	ldi	r19, 0x00	; 0
 75a:	87 e0       	ldi	r24, 0x07	; 7
 75c:	e8 9f       	mul	r30, r24
 75e:	f0 01       	movw	r30, r0
 760:	11 24       	eor	r1, r1
 762:	eb 5f       	subi	r30, 0xFB	; 251
 764:	fd 4f       	sbci	r31, 0xFD	; 253
 766:	80 81       	ld	r24, Z
 768:	86 ff       	sbrs	r24, 6
 76a:	1a c0       	rjmp	.+52     	; 0x7a0 <__vector_47+0x8c>
 76c:	f9 01       	movw	r30, r18
 76e:	ee 0f       	add	r30, r30
 770:	ff 1f       	adc	r31, r31
 772:	ee 0f       	add	r30, r30
 774:	ff 1f       	adc	r31, r31
 776:	ee 0f       	add	r30, r30
 778:	ff 1f       	adc	r31, r31
 77a:	e2 1b       	sub	r30, r18
 77c:	f3 0b       	sbc	r31, r19
 77e:	eb 5f       	subi	r30, 0xFB	; 251
 780:	fd 4f       	sbci	r31, 0xFD	; 253
 782:	a5 81       	ldd	r26, Z+5	; 0x05
 784:	b6 81       	ldd	r27, Z+6	; 0x06
 786:	2c 91       	ld	r18, X
 788:	30 81       	ld	r19, Z
 78a:	3f 73       	andi	r19, 0x3F	; 63
 78c:	81 e0       	ldi	r24, 0x01	; 1
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	02 c0       	rjmp	.+4      	; 0x796 <__vector_47+0x82>
 792:	88 0f       	add	r24, r24
 794:	99 1f       	adc	r25, r25
 796:	3a 95       	dec	r19
 798:	e2 f7       	brpl	.-8      	; 0x792 <__vector_47+0x7e>
 79a:	80 95       	com	r24
 79c:	82 23       	and	r24, r18
 79e:	8c 93       	st	X, r24
 7a0:	e1 e0       	ldi	r30, 0x01	; 1
 7a2:	f2 e0       	ldi	r31, 0x02	; 2
 7a4:	80 81       	ld	r24, Z
 7a6:	8f 5f       	subi	r24, 0xFF	; 255
 7a8:	80 83       	st	Z, r24
 7aa:	e0 81       	ld	r30, Z
 7ac:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_end>
 7b0:	e8 17       	cp	r30, r24
 7b2:	a8 f5       	brcc	.+106    	; 0x81e <__vector_47+0x10a>
 7b4:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <sm_channel>
 7b8:	8a 30       	cpi	r24, 0x0A	; 10
 7ba:	8c f5       	brge	.+98     	; 0x81e <__vector_47+0x10a>
 7bc:	40 91 24 01 	lds	r20, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
 7c0:	50 91 25 01 	lds	r21, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
 7c4:	2e 2f       	mov	r18, r30
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	87 e0       	ldi	r24, 0x07	; 7
 7ca:	e8 9f       	mul	r30, r24
 7cc:	f0 01       	movw	r30, r0
 7ce:	11 24       	eor	r1, r1
 7d0:	eb 5f       	subi	r30, 0xFB	; 251
 7d2:	fd 4f       	sbci	r31, 0xFD	; 253
 7d4:	81 81       	ldd	r24, Z+1	; 0x01
 7d6:	92 81       	ldd	r25, Z+2	; 0x02
 7d8:	84 0f       	add	r24, r20
 7da:	95 1f       	adc	r25, r21
 7dc:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 7e0:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
 7e4:	80 81       	ld	r24, Z
 7e6:	86 ff       	sbrs	r24, 6
 7e8:	35 c0       	rjmp	.+106    	; 0x854 <__vector_47+0x140>
 7ea:	f9 01       	movw	r30, r18
 7ec:	ee 0f       	add	r30, r30
 7ee:	ff 1f       	adc	r31, r31
 7f0:	ee 0f       	add	r30, r30
 7f2:	ff 1f       	adc	r31, r31
 7f4:	ee 0f       	add	r30, r30
 7f6:	ff 1f       	adc	r31, r31
 7f8:	e2 1b       	sub	r30, r18
 7fa:	f3 0b       	sbc	r31, r19
 7fc:	eb 5f       	subi	r30, 0xFB	; 251
 7fe:	fd 4f       	sbci	r31, 0xFD	; 253
 800:	a5 81       	ldd	r26, Z+5	; 0x05
 802:	b6 81       	ldd	r27, Z+6	; 0x06
 804:	3c 91       	ld	r19, X
 806:	20 81       	ld	r18, Z
 808:	2f 73       	andi	r18, 0x3F	; 63
 80a:	81 e0       	ldi	r24, 0x01	; 1
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	02 c0       	rjmp	.+4      	; 0x814 <__vector_47+0x100>
 810:	88 0f       	add	r24, r24
 812:	99 1f       	adc	r25, r25
 814:	2a 95       	dec	r18
 816:	e2 f7       	brpl	.-8      	; 0x810 <__vector_47+0xfc>
 818:	83 2b       	or	r24, r19
 81a:	8c 93       	st	X, r24
 81c:	1b c0       	rjmp	.+54     	; 0x854 <__vector_47+0x140>
 81e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
 822:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
 826:	04 96       	adiw	r24, 0x04	; 4
 828:	80 34       	cpi	r24, 0x40	; 64
 82a:	9c 49       	sbci	r25, 0x9C	; 156
 82c:	38 f4       	brcc	.+14     	; 0x83c <__vector_47+0x128>
 82e:	80 e4       	ldi	r24, 0x40	; 64
 830:	9c e9       	ldi	r25, 0x9C	; 156
 832:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 836:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
 83a:	09 c0       	rjmp	.+18     	; 0x84e <__vector_47+0x13a>
 83c:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
 840:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
 844:	04 96       	adiw	r24, 0x04	; 4
 846:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
 84a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
 84e:	8f ef       	ldi	r24, 0xFF	; 255
 850:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <sm_channel>
 854:	ff 91       	pop	r31
 856:	ef 91       	pop	r30
 858:	bf 91       	pop	r27
 85a:	af 91       	pop	r26
 85c:	9f 91       	pop	r25
 85e:	8f 91       	pop	r24
 860:	5f 91       	pop	r21
 862:	4f 91       	pop	r20
 864:	3f 91       	pop	r19
 866:	2f 91       	pop	r18
 868:	0f 90       	pop	r0
 86a:	0b be       	out	0x3b, r0	; 59
 86c:	0f 90       	pop	r0
 86e:	0f be       	out	0x3f, r0	; 63
 870:	0f 90       	pop	r0
 872:	1f 90       	pop	r1
 874:	18 95       	reti

00000876 <_servomotor_start_isr>:
 876:	81 30       	cpi	r24, 0x01	; 1
 878:	79 f4       	brne	.+30     	; 0x898 <_servomotor_start_isr+0x22>
 87a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
 87e:	82 e0       	ldi	r24, 0x02	; 2
 880:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
 884:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 888:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
 88c:	b1 9a       	sbi	0x16, 1	; 22
 88e:	ef e6       	ldi	r30, 0x6F	; 111
 890:	f0 e0       	ldi	r31, 0x00	; 0
 892:	80 81       	ld	r24, Z
 894:	82 60       	ori	r24, 0x02	; 2
 896:	80 83       	st	Z, r24
 898:	08 95       	ret

0000089a <_servomotor_timer_is_active>:
uint8_t _servomotor_timer_is_active(sm_timer_t timer)
{
	uint8_t i;

	for (i = 0; i < SM_PER_TIMER; i++) {
		if (sm[SM_INDEX(timer, sm_channel[timer])].is_active) {
 89a:	a8 2f       	mov	r26, r24
 89c:	b0 e0       	ldi	r27, 0x00	; 0
 89e:	ad 01       	movw	r20, r26
 8a0:	44 0f       	add	r20, r20
 8a2:	55 1f       	adc	r21, r21
 8a4:	cd 01       	movw	r24, r26
 8a6:	88 0f       	add	r24, r24
 8a8:	99 1f       	adc	r25, r25
 8aa:	88 0f       	add	r24, r24
 8ac:	99 1f       	adc	r25, r25
 8ae:	88 0f       	add	r24, r24
 8b0:	99 1f       	adc	r25, r25
 8b2:	48 0f       	add	r20, r24
 8b4:	59 1f       	adc	r21, r25
 8b6:	fd 01       	movw	r30, r26
 8b8:	ef 5f       	subi	r30, 0xFF	; 255
 8ba:	fd 4f       	sbci	r31, 0xFD	; 253
 8bc:	80 81       	ld	r24, Z
 8be:	9a 01       	movw	r18, r20
 8c0:	28 0f       	add	r18, r24
 8c2:	31 1d       	adc	r19, r1
 8c4:	87 fd       	sbrc	r24, 7
 8c6:	3a 95       	dec	r19
 8c8:	f9 01       	movw	r30, r18
 8ca:	ee 0f       	add	r30, r30
 8cc:	ff 1f       	adc	r31, r31
 8ce:	ee 0f       	add	r30, r30
 8d0:	ff 1f       	adc	r31, r31
 8d2:	ee 0f       	add	r30, r30
 8d4:	ff 1f       	adc	r31, r31
 8d6:	e2 1b       	sub	r30, r18
 8d8:	f3 0b       	sbc	r31, r19
 8da:	eb 5f       	subi	r30, 0xFB	; 251
 8dc:	fd 4f       	sbci	r31, 0xFD	; 253
 8de:	80 81       	ld	r24, Z
 8e0:	86 fd       	sbrc	r24, 6
 8e2:	1a c0       	rjmp	.+52     	; 0x918 <_servomotor_timer_is_active+0x7e>
 8e4:	89 e0       	ldi	r24, 0x09	; 9
 8e6:	af 5f       	subi	r26, 0xFF	; 255
 8e8:	bd 4f       	sbci	r27, 0xFD	; 253
 8ea:	9c 91       	ld	r25, X
 8ec:	9a 01       	movw	r18, r20
 8ee:	29 0f       	add	r18, r25
 8f0:	31 1d       	adc	r19, r1
 8f2:	97 fd       	sbrc	r25, 7
 8f4:	3a 95       	dec	r19
 8f6:	f9 01       	movw	r30, r18
 8f8:	ee 0f       	add	r30, r30
 8fa:	ff 1f       	adc	r31, r31
 8fc:	ee 0f       	add	r30, r30
 8fe:	ff 1f       	adc	r31, r31
 900:	ee 0f       	add	r30, r30
 902:	ff 1f       	adc	r31, r31
 904:	e2 1b       	sub	r30, r18
 906:	f3 0b       	sbc	r31, r19
 908:	eb 5f       	subi	r30, 0xFB	; 251
 90a:	fd 4f       	sbci	r31, 0xFD	; 253
 90c:	90 81       	ld	r25, Z
 90e:	96 fd       	sbrc	r25, 6
 910:	05 c0       	rjmp	.+10     	; 0x91c <_servomotor_timer_is_active+0x82>
 912:	81 50       	subi	r24, 0x01	; 1

uint8_t _servomotor_timer_is_active(sm_timer_t timer)
{
	uint8_t i;

	for (i = 0; i < SM_PER_TIMER; i++) {
 914:	51 f7       	brne	.-44     	; 0x8ea <_servomotor_timer_is_active+0x50>
 916:	08 95       	ret
		if (sm[SM_INDEX(timer, sm_channel[timer])].is_active) {
			return 1;
 918:	81 e0       	ldi	r24, 0x01	; 1
 91a:	08 95       	ret
 91c:	81 e0       	ldi	r24, 0x01	; 1
		}
	}

	return 0;
}
 91e:	08 95       	ret

00000920 <servomotor_attach>:

uint8_t servomotor_attach(volatile uint8_t *port, uint8_t pin, int16_t middle, uint8_t is_reverse)
{
 920:	ef 92       	push	r14
 922:	ff 92       	push	r15
 924:	0f 93       	push	r16
 926:	1f 93       	push	r17
 928:	cf 93       	push	r28
 92a:	df 93       	push	r29
	LED_ON();
 92c:	2f 9a       	sbi	0x05, 7	; 5
	uint8_t index;
	
	if (sm_count < SM_MAX) {
 92e:	c0 91 00 02 	lds	r28, 0x0200	; 0x800200 <__data_end>
 932:	c8 32       	cpi	r28, 0x28	; 40
 934:	08 f0       	brcs	.+2      	; 0x938 <servomotor_attach+0x18>
 936:	45 c0       	rjmp	.+138    	; 0x9c2 <servomotor_attach+0xa2>
		index = sm_count++;
 938:	31 e0       	ldi	r19, 0x01	; 1
 93a:	3c 0f       	add	r19, r28
 93c:	30 93 00 02 	sts	0x0200, r19	; 0x800200 <__data_end>
		sm[index].ticks = SM_US_TO_TICKS(SM_DEFAULT_PULSE);
 940:	0c 2f       	mov	r16, r28
 942:	10 e0       	ldi	r17, 0x00	; 0
 944:	37 e0       	ldi	r19, 0x07	; 7
 946:	c3 9f       	mul	r28, r19
 948:	f0 01       	movw	r30, r0
 94a:	11 24       	eor	r1, r1
 94c:	eb 5f       	subi	r30, 0xFB	; 251
 94e:	fd 4f       	sbci	r31, 0xFD	; 253
 950:	a8 eb       	ldi	r26, 0xB8	; 184
 952:	bb e0       	ldi	r27, 0x0B	; 11
 954:	b2 83       	std	Z+2, r27	; 0x02
 956:	a1 83       	std	Z+1, r26	; 0x01
		
		*(port - 1) |= _BV(pin);
 958:	a8 2f       	mov	r26, r24
 95a:	b9 2f       	mov	r27, r25
 95c:	3e 91       	ld	r19, -X
 95e:	ee 24       	eor	r14, r14
 960:	e3 94       	inc	r14
 962:	f1 2c       	mov	r15, r1
 964:	06 2e       	mov	r0, r22
 966:	02 c0       	rjmp	.+4      	; 0x96c <servomotor_attach+0x4c>
 968:	ee 0c       	add	r14, r14
 96a:	ff 1c       	adc	r15, r15
 96c:	0a 94       	dec	r0
 96e:	e2 f7       	brpl	.-8      	; 0x968 <servomotor_attach+0x48>
 970:	e3 2a       	or	r14, r19
 972:	ec 92       	st	X, r14
		
		sm[index].pin  = pin;
 974:	6f 73       	andi	r22, 0x3F	; 63
 976:	30 81       	ld	r19, Z
 978:	30 7c       	andi	r19, 0xC0	; 192
		sm[index].port = port;
 97a:	85 83       	std	Z+5, r24	; 0x05
 97c:	96 83       	std	Z+6, r25	; 0x06
		
		sm[index].middle     = middle;
 97e:	54 83       	std	Z+4, r21	; 0x04
 980:	43 83       	std	Z+3, r20	; 0x03
		sm[index].is_reverse = is_reverse;
 982:	63 2b       	or	r22, r19
 984:	20 fb       	bst	r18, 0
 986:	67 f9       	bld	r22, 7
 988:	60 83       	st	Z, r22
		
		sm_timer_t timer = SM_GET_TIMER(index);
 98a:	dd ec       	ldi	r29, 0xCD	; 205
 98c:	cd 9f       	mul	r28, r29
 98e:	d1 2d       	mov	r29, r1
 990:	11 24       	eor	r1, r1
 992:	d6 95       	lsr	r29
 994:	d6 95       	lsr	r29
 996:	d6 95       	lsr	r29
		if (!_servomotor_timer_is_active(timer)) {
 998:	8d 2f       	mov	r24, r29
 99a:	7f df       	rcall	.-258    	; 0x89a <_servomotor_timer_is_active>
 99c:	81 11       	cpse	r24, r1
 99e:	02 c0       	rjmp	.+4      	; 0x9a4 <servomotor_attach+0x84>
			_servomotor_start_isr(timer);
 9a0:	8d 2f       	mov	r24, r29
 9a2:	69 df       	rcall	.-302    	; 0x876 <_servomotor_start_isr>
		}
		
		sm[index].is_active = 1;
 9a4:	f8 01       	movw	r30, r16
 9a6:	ee 0f       	add	r30, r30
 9a8:	ff 1f       	adc	r31, r31
 9aa:	ee 0f       	add	r30, r30
 9ac:	ff 1f       	adc	r31, r31
 9ae:	ee 0f       	add	r30, r30
 9b0:	ff 1f       	adc	r31, r31
 9b2:	e0 1b       	sub	r30, r16
 9b4:	f1 0b       	sbc	r31, r17
 9b6:	eb 5f       	subi	r30, 0xFB	; 251
 9b8:	fd 4f       	sbci	r31, 0xFD	; 253
 9ba:	80 81       	ld	r24, Z
 9bc:	80 64       	ori	r24, 0x40	; 64
 9be:	80 83       	st	Z, r24
 9c0:	01 c0       	rjmp	.+2      	; 0x9c4 <servomotor_attach+0xa4>
	} else {
		index = SM_INVALID;
 9c2:	cf ef       	ldi	r28, 0xFF	; 255
	}
	
	return index;
}
 9c4:	8c 2f       	mov	r24, r28
 9c6:	df 91       	pop	r29
 9c8:	cf 91       	pop	r28
 9ca:	1f 91       	pop	r17
 9cc:	0f 91       	pop	r16
 9ce:	ff 90       	pop	r15
 9d0:	ef 90       	pop	r14
 9d2:	08 95       	ret

000009d4 <__vector_23>:
	TIFR0  = _BV(TOV0);
	TIMSK0 = _BV(TOIE0);
}

ISR(TIMER0_OVF_vect)
{
 9d4:	1f 92       	push	r1
 9d6:	0f 92       	push	r0
 9d8:	0f b6       	in	r0, 0x3f	; 63
 9da:	0f 92       	push	r0
 9dc:	11 24       	eor	r1, r1
 9de:	0b b6       	in	r0, 0x3b	; 59
 9e0:	0f 92       	push	r0
 9e2:	2f 93       	push	r18
 9e4:	3f 93       	push	r19
 9e6:	4f 93       	push	r20
 9e8:	5f 93       	push	r21
 9ea:	6f 93       	push	r22
 9ec:	7f 93       	push	r23
 9ee:	8f 93       	push	r24
 9f0:	9f 93       	push	r25
 9f2:	af 93       	push	r26
 9f4:	bf 93       	push	r27
 9f6:	ef 93       	push	r30
 9f8:	ff 93       	push	r31
	timer0++;
 9fa:	80 91 1d 03 	lds	r24, 0x031D	; 0x80031d <timer0>
 9fe:	8f 5f       	subi	r24, 0xFF	; 255
 a00:	80 93 1d 03 	sts	0x031D, r24	; 0x80031d <timer0>
	
	if (timer0 == 3) {
 a04:	80 91 1d 03 	lds	r24, 0x031D	; 0x80031d <timer0>
 a08:	83 30       	cpi	r24, 0x03	; 3
 a0a:	19 f4       	brne	.+6      	; 0xa12 <__vector_23+0x3e>
		es_trigger(TIMER0_OVF_EVENT);
 a0c:	92 db       	rcall	.-2268   	; 0x132 <es_trigger>
		timer0 = 0;
 a0e:	10 92 1d 03 	sts	0x031D, r1	; 0x80031d <timer0>
	}
 a12:	ff 91       	pop	r31
 a14:	ef 91       	pop	r30
 a16:	bf 91       	pop	r27
 a18:	af 91       	pop	r26
 a1a:	9f 91       	pop	r25
 a1c:	8f 91       	pop	r24
 a1e:	7f 91       	pop	r23
 a20:	6f 91       	pop	r22
 a22:	5f 91       	pop	r21
 a24:	4f 91       	pop	r20
 a26:	3f 91       	pop	r19
 a28:	2f 91       	pop	r18
 a2a:	0f 90       	pop	r0
 a2c:	0b be       	out	0x3b, r0	; 59
 a2e:	0f 90       	pop	r0
 a30:	0f be       	out	0x3f, r0	; 63
 a32:	0f 90       	pop	r0
 a34:	1f 90       	pop	r1
 a36:	18 95       	reti

00000a38 <_exit>:
 a38:	f8 94       	cli

00000a3a <__stop_program>:
 a3a:	ff cf       	rjmp	.-2      	; 0xa3a <__stop_program>
